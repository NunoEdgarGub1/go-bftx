package bftx_logger

import (
	"log"
	"os"
	"time"
)

// simpleLogger writes errors and the function name that generated the error to bftx.log
func SimpleLogger(funcName string, currentError error) {
	// If the file doesn't exist, create it, or append to the file
	f, err := os.OpenFile(os.Getenv("GOPATH")+"/src/github.com/blockfreight/go-bftx/logs/bftx.log", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		log.Fatal(err)
	}
	if _, err := f.Write([]byte(time.Now().Format("2006/01/02 15:04") + ", " + funcName + ", " + currentError.Error() + "\n\n")); err != nil {
		log.Fatal(err)
	}
	if err := f.Close(); err != nil {
		log.Fatal(err)
	}
}

// queryLogger writes errors, the function name that generated the error, and the transaction body to bftx.log for cmdQuery only
func StringLogger(funcName string, currentError string, id string) {
	// If the file doesn't exist, create it, or append to the file
	f, err := os.OpenFile(os.Getenv("GOPATH")+"/src/github.com/blockfreight/go-bftx/logs/bftx.log", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		log.Fatal(err)
	}
	if _, err := f.Write([]byte(time.Now().Format("2006/01/02 15:04") + ", " + funcName + ", " + currentError + ", " + id + "\n\n")); err != nil {
		log.Fatal(err)
	}
	if err := f.Close(); err != nil {
		log.Fatal(err)
	}
}

// transLogger writes errors, the function name that generated the error, and the transaction body to bftx.log
func TransLogger(funcName string, currentError error, id string) {
	// If the file doesn't exist, create it, or append to the file
	f, err := os.OpenFile(os.Getenv("GOPATH")+"/src/github.com/blockfreight/go-bftx/logs/bftx.log", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		log.Fatal(err)
	}
	if _, err := f.Write([]byte(time.Now().Format("2006/01/02 15:04") + ", " + funcName + ", " + currentError.Error() + ", " + id + "\n\n")); err != nil {
		log.Fatal(err)
	}
	if err := f.Close(); err != nil {
		log.Fatal(err)
	}
}

// apiListener writes the time and transaction ID generated by ConstructBfTx api calls to api.log
func ApiListener(id string) {
	// If the file doesn't exist, create it, or append to the file
	f, err := os.OpenFile(os.Getenv("GOPATH")+"/src/github.com/blockfreight/go-bftx/logs/transaction_id.log", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		log.Fatal(err)
	}
	if _, err := f.Write([]byte(time.Now().Format("2006/01/02 15:04") + ", " + id + "\n\n")); err != nil {
		log.Fatal(err)
	}
	if err := f.Close(); err != nil {
		log.Fatal(err)
	}
}
